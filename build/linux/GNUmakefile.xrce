TARGET_BASENAME := xrce
BITS := $(shell getconf LONG_BIT)

LINUX_VER=$(shell uname -r | cut -f 1 -d '.')
GCC_VER=$(shell gcc --version | grep gcc | rev | cut -f 1 -d ' ' | rev)
TARGET_PATH=x$(BITS)Linux$(LINUX_VER)gcc$(GCC_VER)

GROUP_HOME := ../..
PROJECT_HOME := $(GROUP_HOME)/xrce
INCLUDES := -I$(GROUP_HOME)/include -I$(GROUP_HOME)
LIB_PATH := $(GROUP_HOME)/lib/$(TARGET_PATH)

ifeq ($(DEBUG),1)
SUFFIX := d
OBJ_OPTIONS := -g O0 -W -Wall -std=c++11
LIB_OPTIONS := -shared -Wl,-soname,lib$(TARGET_BASENAME)$(SUFFIX).so
else
SUFFIX :=
OBJ_OPTIONS := -O2 -std=c++11
LIB_OPTIONS := -shared -Wl,-soname,lib$(TARGET_BASENAME)$(SUFFIX).so
endif

OBJ_FLAGS := -m$(BITS) -fPIC -fno-permissive
BIN_FLAGS := -m$(BITS) -fPIC -fno-permissive
LIB_FLAGS := -m$(BITS) -fno-permissive
LIBS := -L$(LIB_PATH) -lpthread -lrt

DEFINES :=

OUTDIR := $(GROUP_HOME)/lib/$(TARGET_PATH)
OBJDIR := $(GROUP_HOME)/objs
SRCDIR := $(PROJECT_HOME)
SUBDIRS := xrce

SRCS := $(foreach dir, $(SUBDIRS), $(wildcard $(SRCDIR)/$(dir)/*.cpp))
OBJS := $(SRCS:$(SRCDIR)/%.cpp=$(OBJDIR)/%$(SUFFIX).o)
TARGET := $(OUTDIR)/lib$(TARGET_BASENAME)$(SUFFIX).so

$(foreach dir, $(SUBDIRS), $(shell mkdir -p $(OBJDIR)/$(dir)))
$(OBJDIR)/%$(OBJ_SUFFIX).o : $(SRCDIR)/%.cpp
	$(CXX) $(OBJ_FLAGS) $(OBJ_OPTIONS) -o $@ $(DEFINES) $(INCLUDES) -c $<

pre-build:
	mkdir -p $(OBJDIR);mkdir -p $(OUTDIR);sh PreBuildEvent.sh;

all: pre-build $(OBJS)
	$(CXX) $(LIB_FLAGS) $(LIB_OPTIONS) -o $(TARGET) $(OBJS) $(LIBS)

clean:
	rm -rf $(TARGET) $(GROUP_HOME)/objs
